name: Build and Release

on:
  push:
    tags:
      - "v*"   # Triggers only when you push a tag starting with "v"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      # Get dependencies
      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y g++ cmake zip libcurl4-openssl-dev nlohmann-json3-dev

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          choco install cmake -y
          choco install zip -y
          choco install mingw -y
          git clone https://github.com/microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.bat
          ./vcpkg/vcpkg install curl


      # Build Linux
      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release
          cmake --build build

      # Build Windows
      - name: Build Windows
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          cmake -S . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake
          cmake --build build

      - name: Copy MinGW DLLs (Windows)
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          MINGW_BIN="/c/ProgramData/chocolatey/lib/mingw/tools/install/mingw64/bin"
          cp "$MINGW_BIN/libstdc++-6.dll" build/bin/ || true
          cp "$MINGW_BIN/libwinpthread-1.dll" build/bin/ || true
          cp "$MINGW_BIN/libgcc_s_seh-1.dll" build/bin/ || true

      - name: Move and zip built files
        run: |
          mkdir -p release-files
          cp -r build/bin release-files/
          cp -r build/lib release-files/
          zip -r app-${{ matrix.os }}.zip release-files/*

      # Upload build artifacts
      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.os }}
          path: app*.zip
          if-no-files-found: error

      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3


  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./release-files

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./release-files/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
